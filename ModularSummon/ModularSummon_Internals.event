
#include "EAstdlib.event"

// No need to touch stuff below here probably 
#ifndef IsPointer
	#define IsPointer 0x08000000 
#endif 
#ifndef SDEQUEUE 
	#define SDEQUEUE "SHORT 0x0722" 
#endif 

#include "ModularSummon.lyn.event"

#include "Extensions/ProcDefinitions.txt"

#ifndef EXPAND_AI
	#include "ExpandAI/ExpandAI.event"
#endif 
#ifndef PROC_YIELD
	#define PROC_YIELD "PROC_YEILD"
#endif 


ALIGN 4
ClearMemorySlotQueueEvent:
LABEL 0 
BEQ 1 rD r0 
SDEQUEUE 1
GOTO 0 
LABEL 1 
NoFade 
ENDA 

CallModularSummonASMC_Event:
ASMC ModularSummonEffect2
NoFade 
ENDA 

AIModularSummon_Event:

//SDEQUEUE rB
//LABEL 0 
//BEQ 1 rD r0 
//SDEQUEUE 1
//GOTO 0 
//LABEL 1 
ASMC PauseEventEngineWhileUnitsAreMoving

//SDEQUEUE rB
ASMC UpdateActiveUnitCoords
ASMC ModularSummonEffect2
ASMC 0x0801a1f5 //@RefreshFogAndUnitMaps 
NoFade 
ENDA 


// 3B808
// 9A46AC gProc_summongfx
WarpAnimationEvent:

SDEQUEUE 1 // we stored a unit pointer to the memory slots queue, so now we retrive that pointer 
ASMC ModularSummon_GetSummonedUnitCoords
_0x2629 -2 // CAM2
ASMC WarpAnimationQueue
NoFade 
ENDA 

ModularSummon_RestoreCameraEvent:
//_0x2629 0x7FFF // CAM2
ASMC ModularSummon_RestoreCameraASMC // Move back to active unit using CenterCameraOntoPosition
NoFade 
ENDA 

ALIGN 4
WaitUntilAIMovesProc:
PROC_YIELD // Buffer.
PROC_SET_NAME(WaitUntilAIMovesProcName)
PROC_SLEEP(0)
PROC_LOOP_ROUTINE(IfProcStateWrongThenYield)
PROC_CALL_ROUTINE(CallAIModularSummon_Event)
PROC_END

ALIGN 4
PauseEventEngineUnitsMovingProc:
PROC_YIELD // Buffer.
PROC_SET_NAME(PauseEventEngineUnitsMovingProcName)

PROC_LOOP_ROUTINE(IfActiveAIFinishedMovingThenStopPausingEventEngine)

PROC_END


WaitUntilAIMovesProcName:
String("EventEnginePauseUnitsMoving") ; BYTE 0
ALIGN 4

PauseEventEngineUnitsMovingProcName:
String("EventEnginePauseUnitsMoving") ; BYTE 0

ALIGN 4


